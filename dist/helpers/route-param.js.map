{"version":3,"file":"route-param.js","sourceRoot":"","sources":["../../src/helpers/route-param.ts"],"names":[],"mappings":";;AAAA,6CAAoC;AACpC,iBAAe;AACf,6CAAwG;AACxG,qDAAiD;AAEjD;IAkBI,YAAmB,UAAkB;QAX7B,WAAM,GAAG,CAAC,CAAC;QAaf,mBAAK,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC,cAAc,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC,CAAC;QAEvF,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC;QAC9B,IAAI,QAAgB,CAAC;QACrB,IAAI,SAAiB,CAAC;QACtB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,UAAU,GAAG,KAAK,CAAC;QAEvB,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAC1B,CAAC;YACG,OAAO,GAAG,IAAI,CAAC;YACf,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACrC,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CACxB,CAAC;YACG,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB,EAAE,CAAC;gBAC9F,MAAM,IAAI,sCAAwB,CAAC,YAAY,CAAC,CAAC;YAErD,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAC9B,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YAE7C,EAAE,CAAC,CAAC,SAAS,KAAK,UAAU,CAAC,OAAO,IAAI,SAAS,KAAK,UAAU,CAAC,MAAM,IAAI,SAAS,KAAK,UAAU,CAAC,MAAM,CAAC;gBACvG,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC;QACnC,CAAC;QACD,IAAI,CACJ,CAAC;YACG,QAAQ,GAAG,KAAK,CAAC;YACjB,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC;QAC/B,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAC3B,CAAC;YACG,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC;gBACT,MAAM,IAAI,kCAAoB,CAAC,qCAAqC,CAAC,CAAC;YAE1E,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACnD,UAAU,GAAG,IAAI,CAAC;QACtB,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;IAClC,CAAC;IAxDD,IAAW,KAAK,KAAa,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,IAAW,QAAQ,KAAa,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,IAAW,SAAS,KAAa,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1D,IAAW,OAAO,KAAc,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvD,IAAW,UAAU,KAAc,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC7D,IAAW,KAAK,KAAa,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAqD3C,QAAQ,CAAC,KAAa;QAEzB,mBAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,cAAc,EAAE,CAAC;QAEvC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,MAAM,IAAI,uCAAyB,CAAC,UAAU,CAAC,CAAC;QAEpD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,UAAU,CAAC,KAAa;QAE3B,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,mBAAmB,EAAE,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CACjH,CAAC;YACG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC;YAEhB,MAAM,IAAI,8BAAa,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;QAED,KAAK,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;QAErB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,GAAG,CAAC;YAC5E,MAAM,CAAC,KAAK,CAAC;QAEjB,IACA,CAAC;YACG,MAAM,CAAC,IAAI,CAAC,UAAU,KAAK,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACtG,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,CAAC;YACG,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC;YAEhB,MAAM,KAAK,CAAC;QAChB,CAAC;IACL,CAAC;IAEO,WAAW,CAAC,KAAa;QAE7B,IACA,CAAC;YACG,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAClF,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACnB,MAAM,CAAC,GAAG,CAAC;YACf,MAAM,aAAa,CAAC;QACxB,CAAC;QACD,KAAK,CAAC,CAAC,KAAK,CAAC,CACb,CAAC;YACG,MAAM,IAAI,8BAAa,CAAC,GAAG,CAAC,CAAC;QACjC,CAAC;IACL,CAAC;IAEO,YAAY,CAAC,KAAa;QAE9B,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAE5B,EAAE,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC;QAEhB,EAAE,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC;QAEjB,MAAM,IAAI,8BAAa,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;CACJ;AArID,gCAqIC;AAED;IAQW,MAAM,KAAK,OAAO,KAAa,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtD,MAAM,KAAK,MAAM,KAAa,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,MAAM,KAAK,MAAM,KAAa,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,MAAM,KAAK,GAAG,KAAa,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAT7B,mBAAQ,GAAG,SAAS,CAAC;AACrB,kBAAO,GAAG,QAAQ,CAAC;AACnB,kBAAO,GAAG,QAAQ,CAAC;AACnB,eAAI,GAAG,KAAK,CAAC","sourcesContent":["import { given } from \"n-defensive\";\nimport \"n-ext\";\nimport { InvalidArgumentException, ApplicationException, InvalidOperationException } from \"n-exception\";\nimport { HttpException } from \"./http-exception\";\n\nexport class RouteParam\n{\n    private readonly _param: string;\n    private readonly _paramKey: string;\n    private readonly _paramType: string;\n    private readonly _isQuery: boolean;\n    private readonly _isOptional: boolean;\n    private _order = 0;\n\n\n    public get param(): string { return this._param; }\n    public get paramKey(): string { return this._paramKey; }\n    public get paramType(): string { return this._paramType; }\n    public get isQuery(): boolean { return this._isQuery; }\n    public get isOptional(): boolean { return this._isOptional; }\n    public get order(): number { return this._order; }\n\n\n    public constructor(routeParam: string)\n    {\n        given(routeParam, \"routeParam\").ensureHasValue().ensure(t => !t.isEmptyOrWhiteSpace());\n\n        let param = routeParam.trim();\n        let paramKey: string;\n        let paramType: string;\n        let isQuery = false;\n        let isOptional = false;\n\n        if (param.endsWith(\"[Q]\"))\n        {\n            isQuery = true;\n            param = param.replace(\"[Q]\", \"\");\n        }\n\n        if (param.contains(\":\"))\n        {\n            let splitted = param.split(\":\");\n            if (splitted.length > 2 || splitted[0].isEmptyOrWhiteSpace() || splitted[1].isEmptyOrWhiteSpace())\n                throw new InvalidArgumentException(\"routeParam\");\n\n            paramKey = splitted[0].trim();\n            paramType = splitted[1].trim().toLowerCase();\n\n            if (paramType !== ParamTypes.boolean && paramType !== ParamTypes.number && paramType !== ParamTypes.string)\n                paramType = ParamTypes.any;\n        }\n        else\n        {\n            paramKey = param;\n            paramType = ParamTypes.any;\n        }\n\n        if (paramKey.endsWith(\"?\"))\n        {\n            if (!isQuery)\n                throw new ApplicationException(\"Path parameters cannot be optional.\");\n\n            paramKey = paramKey.substr(0, paramKey.length - 1);\n            isOptional = true;\n        }\n\n        this._param = param;\n        this._paramKey = paramKey;\n        this._paramType = paramType;\n        this._isQuery = isQuery;\n        this._isOptional = isOptional;\n    }\n\n    public setOrder(order: number): void\n    {\n        given(order, \"order\").ensureHasValue();\n\n        if (this._order > 0)\n            throw new InvalidOperationException(\"setOrder\");\n\n        this._order = order;\n    }\n\n    public parseParam(value: string): any\n    {\n        if (value === undefined || value == null || value.isEmptyOrWhiteSpace() || value.trim().toLowerCase() === \"null\")\n        {\n            if (this._isOptional)\n                return null;\n\n            throw new HttpException(404);\n        }\n\n        value = value.trim();\n\n        if (this._paramType === ParamTypes.string || this._paramType === ParamTypes.any)\n            return value;\n\n        try \n        {\n            return this._paramType === ParamTypes.number ? this.parseNumber(value) : this.parseBoolean(value);\n        }\n        catch (error)\n        {\n            if (this._isOptional)\n                return null;\n\n            throw error;\n        }\n    }\n\n    private parseNumber(value: string): number\n    {\n        try \n        {\n            let num = value.contains(\".\") ? Number.parseFloat(value) : Number.parseInt(value);\n            if (!Number.isNaN(num))\n                return num;\n            throw \"PARSE ERROR\";\n        }\n        catch (error)\n        {\n            throw new HttpException(404);\n        }\n    }\n\n    private parseBoolean(value: string): boolean\n    {\n        value = value.toLowerCase();\n\n        if (value === \"true\")\n            return true;\n\n        if (value === \"false\")\n            return false;\n\n        throw new HttpException(404);\n    }\n}\n\nclass ParamTypes\n{\n    private static readonly _boolean = \"boolean\";\n    private static readonly _number = \"number\";\n    private static readonly _string = \"string\";\n    private static readonly _any = \"any\";\n\n\n    public static get boolean(): string { return this._boolean; }\n    public static get number(): string { return this._number; }\n    public static get string(): string { return this._string; }\n    public static get any(): string { return this._any; }\n}"]}